{"ast":null,"code":"var _jsxFileName = \"/home/mclo/\\xC1rea de Trabalho/estilizacoes-css/solar-system/projeto-Star-Wars/src/components/FilterForms/Select/Select.jsx\";\nimport PropTypes from 'prop-types';\n// import React from 'react';\n\n// function Select({ options, dataTestid = '',\n//   onChange = [], name, label = '' }) {\n//   return (\n//     <label htmlFor=\"select\">\n//       {label}\n//       <select\n//         data-testid={ dataTestid }\n//         name={ name }\n//         id=\"select\"\n//         onChange={ ({ target }) => onChange({ target }) }\n//       >\n//         {options.map((el, index) => (\n//           <option key={ index } value={ el }>\n//             {el}\n//           </option>\n//         ))}\n//       </select>\n//     </label>\n//   );\n// }\n\n// Select.propTypes = {\n//   dataTestid: PropTypes.string,\n//   onChange: PropTypes.func,\n//   name: PropTypes.string,\n//   label: PropTypes.string,\n//   options: PropTypes.shape({\n//     map: PropTypes.func,\n//   }).isRequired,\n\n// };\n\n// export default Select;\n\nimport React, { Component } from 'react';\nimport style from './Select.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Select extends Component {\n  render() {\n    const {\n      options,\n      dataTestid,\n      onChange,\n      name,\n      label\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"select\",\n      children: [label, /*#__PURE__*/_jsxDEV(\"select\", {\n        \"data-testid\": dataTestid,\n        name: name,\n        id: \"select\",\n        className: style.container,\n        onChange: _ref => {\n          let {\n            target\n          } = _ref;\n          return onChange({\n            target\n          });\n        },\n        children: options.map((el, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: el,\n          children: el\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nSelect.propTypes = {\n  dataTestid: PropTypes.string,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.shape({\n    map: PropTypes.func\n  }).isRequired\n};\nSelect.defaultProps = {\n  dataTestid: '',\n  onChange: '',\n  name: '',\n  label: ''\n};","map":{"version":3,"names":["PropTypes","React","Component","style","Select","render","options","dataTestid","onChange","name","label","props","container","target","map","el","index","propTypes","string","func","shape","isRequired","defaultProps"],"sources":["/home/mclo/√Årea de Trabalho/estilizacoes-css/solar-system/projeto-Star-Wars/src/components/FilterForms/Select/Select.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\n// import React from 'react';\n\n// function Select({ options, dataTestid = '',\n//   onChange = [], name, label = '' }) {\n//   return (\n//     <label htmlFor=\"select\">\n//       {label}\n//       <select\n//         data-testid={ dataTestid }\n//         name={ name }\n//         id=\"select\"\n//         onChange={ ({ target }) => onChange({ target }) }\n//       >\n//         {options.map((el, index) => (\n//           <option key={ index } value={ el }>\n//             {el}\n//           </option>\n//         ))}\n//       </select>\n//     </label>\n//   );\n// }\n\n// Select.propTypes = {\n//   dataTestid: PropTypes.string,\n//   onChange: PropTypes.func,\n//   name: PropTypes.string,\n//   label: PropTypes.string,\n//   options: PropTypes.shape({\n//     map: PropTypes.func,\n//   }).isRequired,\n\n// };\n\n// export default Select;\n\nimport React, { Component } from 'react';\nimport style from './Select.module.css';\n\nexport default class Select extends Component {\n  render() {\n    const { options, dataTestid,\n      onChange, name, label } = this.props;\n    return (\n      <label htmlFor=\"select\">\n        {label}\n        <select\n          data-testid={ dataTestid }\n          name={ name }\n          id=\"select\"\n          className={ style.container }\n          onChange={ ({ target }) => onChange({ target }) }\n        >\n          {options.map((el, index) => (\n            <option key={ index } value={ el }>\n              {el}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\nSelect.propTypes = {\n  dataTestid: PropTypes.string,\n  onChange: PropTypes.func,\n  name: PropTypes.string,\n  label: PropTypes.string,\n  options: PropTypes.shape({\n    map: PropTypes.func,\n  }).isRequired,\n};\n\nSelect.defaultProps = {\n  dataTestid: '',\n  onChange: '',\n  name: '',\n  label: '',\n};\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,qBAAqB;AAAC;AAExC,eAAe,MAAMC,MAAM,SAASF,SAAS,CAAC;EAC5CG,MAAM,GAAG;IACP,MAAM;MAAEC,OAAO;MAAEC,UAAU;MACzBC,QAAQ;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACC,KAAK;IACtC,oBACE;MAAO,OAAO,EAAC,QAAQ;MAAA,WACpBD,KAAK,eACN;QACE,eAAcH,UAAY;QAC1B,IAAI,EAAGE,IAAM;QACb,EAAE,EAAC,QAAQ;QACX,SAAS,EAAGN,KAAK,CAACS,SAAW;QAC7B,QAAQ,EAAG;UAAA,IAAC;YAAEC;UAAO,CAAC;UAAA,OAAKL,QAAQ,CAAC;YAAEK;UAAO,CAAC,CAAC;QAAA,CAAE;QAAA,UAEhDP,OAAO,CAACQ,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,kBACrB;UAAsB,KAAK,EAAGD,EAAI;UAAA,UAC/BA;QAAE,GADSC,KAAK;UAAA;UAAA;UAAA;QAAA,QAGpB;MAAC;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA,QACH;EAEZ;AACF;AAEAZ,MAAM,CAACa,SAAS,GAAG;EACjBV,UAAU,EAAEP,SAAS,CAACkB,MAAM;EAC5BV,QAAQ,EAAER,SAAS,CAACmB,IAAI;EACxBV,IAAI,EAAET,SAAS,CAACkB,MAAM;EACtBR,KAAK,EAAEV,SAAS,CAACkB,MAAM;EACvBZ,OAAO,EAAEN,SAAS,CAACoB,KAAK,CAAC;IACvBN,GAAG,EAAEd,SAAS,CAACmB;EACjB,CAAC,CAAC,CAACE;AACL,CAAC;AAEDjB,MAAM,CAACkB,YAAY,GAAG;EACpBf,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAE,EAAE;EACZC,IAAI,EAAE,EAAE;EACRC,KAAK,EAAE;AACT,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}